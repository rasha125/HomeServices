@model HomeServices.ViewModels.VMProviderProfile

@{
    ViewData["Title"] = "Profile";
    Layout = "~/Views/_Layout.cshtml";
}

<div class="profile-container">
    <div class="profile-card" id="profileCard">

        <form asp-action="EditProfile" method="post" enctype="multipart/form-data" id="profileForm">

            <input type="hidden" id="ActionType" name="actionType" value="" />

            <!-- حقول مخفية ترسل قيم المدينة والدولة -->
            <input type="hidden" name="City" id="hiddenCity" value="@Model.City" />
            <input type="hidden" name="Country" id="hiddenCountry" value="@Model.Country" />

            <div class="mb-3 d-flex flex-column align-items-center">
                @if (!string.IsNullOrEmpty(Model.ImagePath))
                {
                    <div class="profile-photo-container mb-2">
                        <img src="~/uploads/@Model.ImagePath" alt="Profile Image" class="profile-img" />
                    </div>

                    <div id="imageButtons" class="d-none justify-content-center gap-2 mt-2">
                        <button type="button" onclick="markDeletePhoto()" class="btn btn-sm btn-danger rounded-pill px-3">
                            <i class="bi bi-trash me-1"></i> Delete
                        </button>
                        <label class="btn btn-sm btn-secondary rounded-pill px-3 mb-0">
                            <i class="bi bi-upload me-1"></i> Change
                            <input type="file" name="ProfileImage" accept="image/*" onchange="markChangePhoto(this)" style="display:none;" />
                        </label>
                    </div>
                }
                else
                {
                    <label class="profile-photo-container mb-2" style="cursor:pointer;" id="uploadLabel">
                        <i id="profileIcon" class="bi bi-person-circle text-secondary d-flex justify-content-center align-items-center profile-img"></i>
                        <input type="file" name="ProfileImage" accept="image/*" onchange="this.form.submit();" style="display:none;" />
                    </label>
                }
            </div>

            <h3 class="text-center mb-4 d-flex justify-content-center gap-2 align-items-center">
                <span id="nameDisplay" class="fw-bold">@Model.FirstName @Model.LastName</span>
                <input type="text" id="FirstNameInput" name="FirstName" value="@Model.FirstName" class="form-control" style="display:none; width: 45%;" />
                <input type="text" id="LastNameInput" name="LastName" value="@Model.LastName" class="form-control" style="display:none; width: 45%;" />
            </h3>

            <div class="input-group mb-3">
                <span class="input-group-text"><i class="bi bi-telephone-fill"></i></span>
                <div class="form-floating">
                    <input type="text" name="PhoneNumber" value="@Model.PhoneNumber" readonly class="form-control" placeholder="Phone Number" />
                    <label>Phone Number</label>
                </div>
            </div>

            <!-- Country -->
            <div class="input-group mb-3">
                <span class="input-group-text"><i class="bi bi-flag-fill"></i></span>
                <div style="flex: 1 1 auto; position: relative;">
                    <input type="text" id="countryInput" value="@Model.Country" readonly class="form-control" placeholder="Country" />
                    <select name="Country" id="countrySelect" class="form-select d-none" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; padding-left: 1rem;">
                        <option value="">-- Select Country --</option>
                        <option value="Palestine">Palestine</option>
                        <option value="Jordan">Jordan</option>
                    </select>
                </div>
            </div>

            <!-- City -->
            <div class="input-group mb-3">
                <span class="input-group-text"><i class="bi bi-geo-alt-fill"></i></span>
                <div style="flex: 1 1 auto; position: relative;">
                    <input type="text" id="cityInput" value="@Model.City" readonly class="form-control" placeholder="City" />
                    <select name="City" id="citySelect" class="form-select d-none" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; padding-left: 1rem;">
                        <option value="">-- Select City --</option>
                    </select>
                </div>
            </div>

            <div class="input-group mb-3">
                <span class="input-group-text"><i class="bi bi-text-paragraph"></i></span>
                <div class="form-floating">
                    <textarea name="Description" rows="3" readonly class="form-control" placeholder="Description" style="height: 100px;">@Model.Description</textarea>
                    <label>Description</label>
                </div>
            </div>

            <div class="input-group mb-3">
                <span class="input-group-text"><i class="bi bi-tools"></i></span>
                <div class="form-floating">
                    <input type="text" value="@Model.ServiceName" readonly class="form-control" placeholder="Service" />
                    <label>Service</label>
                </div>
            </div>

            <div class="input-group mb-3">
                <span class="input-group-text"><i class="bi bi-check-circle-fill"></i></span>
                <div class="form-floating">
                    <select name="ProviderStatus" class="form-control" disabled>
                        <option value="Available" selected="@(Model.ProviderStatus == "Available")">Available</option>
                        <option value="Inactive" selected="@(Model.ProviderStatus == "Inactive")">Unavailable</option>
                        <option value="OnVacation" selected="@(Model.ProviderStatus == "OnVacation")">On Vacation</option>
                    </select>
                    <label>Availability Status</label>
                </div>
            </div>

            <div class="d-flex justify-content-end gap-2 mt-4">
                <button type="button" id="editBtn" class="btn btn-primary px-4">Edit</button>
                <button type="submit" id="saveBtn" class="btn btn-success d-none px-4">Save</button>
                <button type="button" id="cancelBtn" class="btn btn-secondary d-none px-4">Cancel</button>
            </div>
        </form>
    </div>
</div>

@section Scripts {
<script>
    const editBtn = document.getElementById('editBtn');
    const saveBtn = document.getElementById('saveBtn');
    const cancelBtn = document.getElementById('cancelBtn');

    const nameDisplay = document.getElementById('nameDisplay');
    const firstNameInput = document.getElementById('FirstNameInput');
    const lastNameInput = document.getElementById('LastNameInput');

    const imageButtons = document.getElementById('imageButtons');
    const form = document.getElementById('profileForm');

    const countryInput = document.getElementById('countryInput');
    const countrySelect = document.getElementById('countrySelect');
    const cityInput = document.getElementById('cityInput');
    const citySelect = document.getElementById('citySelect');

    const hiddenCountry = document.getElementById('hiddenCountry');
    const hiddenCity = document.getElementById('hiddenCity');

    const palestineCities = [
        "Ramallah and Al-Bireh", "Nablus", "Hebron", "Tulkarm", "Jenin",
        "Qalqilya", "Bethlehem", "Jericho", "Salfit", "Tubas",
        "Gaza", "Khan Younis", "Rafah", "Deir al-Balah", "North Gaza"
    ];

    const jordanCities = [
        "Amman", "Zarqa", "Irbid", "Balqa", "Mafraq",
        "Karak", "Ma'an", "Tafilah", "Jerash", "Ajloun",
        "Aqaba", "Madaba"
    ];

    editBtn.addEventListener('click', function () {
        nameDisplay.style.display = 'none';
        firstNameInput.style.display = 'inline-block';
        lastNameInput.style.display = 'inline-block';
                const form = document.getElementById('profileForm');

        form.addEventListener('submit', function (e) {
            // إذا select الدولة ظاهر (أي في وضع التحرير)
            if (!countrySelect.classList.contains('d-none')) {
                hiddenCountry.value = countrySelect.value;
            } else {
                hiddenCountry.value = countryInput.value;
            }

            // إذا select المدينة ظاهر
            if (!citySelect.classList.contains('d-none')) {
                hiddenCity.value = citySelect.value;
            } else {
                hiddenCity.value = cityInput.value;
            }
        });
        const inputs = form.querySelectorAll("input[type='text'], textarea");
        inputs.forEach(function (input) {
            if (input !== firstNameInput && input !== lastNameInput) {
                input.removeAttribute('readonly');
            }
        });

        const selects = form.querySelectorAll('select');
        selects.forEach(function (select) {
            select.removeAttribute('disabled');
        });

        if (imageButtons) {
            imageButtons.classList.remove('d-none');
            imageButtons.classList.add('d-flex');
        }

        editBtn.classList.add('d-none');
        saveBtn.classList.remove('d-none');
        if (cancelBtn) {
            cancelBtn.classList.remove('d-none');
        }

        // تغيير المدينة والدولة من input إلى select
        countryInput.classList.add('d-none');
        countrySelect.classList.remove('d-none');
        countrySelect.value = countryInput.value;
        countrySelect.dispatchEvent(new Event('change'));

        cityInput.classList.add('d-none');
        citySelect.classList.remove('d-none');
        citySelect.value = cityInput.value;
    });

    cancelBtn.addEventListener('click', function () {
        window.location.reload();
    });

    countrySelect.addEventListener('change', function () {
        let cities = [];
        const selectedCountry = countrySelect.value;

        if (selectedCountry === "Palestine") {
            cities = palestineCities;
        } else if (selectedCountry === "Jordan") {
            cities = jordanCities;
        }

        citySelect.innerHTML = '<option value="">-- Select City --</option>';
        cities.forEach(function (city) {
            const option = document.createElement('option');
            option.value = city;
            option.text = city;
            citySelect.appendChild(option);
        });

        citySelect.value = "";

        // تحديث القيم المخفية عند تغيير الدولة
        hiddenCountry.value = selectedCountry;
        hiddenCity.value = "";
    });

    citySelect.addEventListener('change', function () {
        hiddenCity.value = citySelect.value;
    });

    function markDeletePhoto() {
        document.getElementById("ActionType").value = "delete";
        alert("Photo will be deleted upon saving.");
    }

    function markChangePhoto(input) {
        if (input.files && input.files.length > 0) {
            document.getElementById("ActionType").value = "change";
            alert("New photo selected. It will be uploaded upon saving.");
        }
    }
</script>
}
