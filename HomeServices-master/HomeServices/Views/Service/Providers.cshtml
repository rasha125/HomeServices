@using HomeServices.ViewModels
@model ServiceProvidersViewModel
@{
    ViewData["Title"] = "Providers for " + Model.ServiceName;
    Layout = "~/Views/_Layout.cshtml";
}

<div class="providers-page-container">
    <div class="page-header text-center mb-4">
        <div class="header-content">
            <a asp-controller="Service" asp-action="Index" class="back-btn">
                <i class="bi bi-arrow-left-circle"></i> Back to Services
            </a>
            <h1 class="display-5 fw-bold">@Model.ServiceName</h1>
            <p class="text-muted">Choose from our top-rated professionals.</p>
        </div>
    </div>

    <div class="search-bar-container mx-auto mb-5">
        <i class="bi bi-search search-icon"></i>
        <input type="text" id="providerSearch" class="form-control" placeholder="Search by provider name..." />
    </div>

    <div class="row" id="providerCards">
        @if (Model.ProvidersWithRatings.Any())
        {
            @foreach (var provider in Model.ProvidersWithRatings)
            {
                var providerStatus = provider.Provider.ProviderStatus;
                string statusClass = "";
                string statusText = "";
                bool isBookable = true;

                switch (providerStatus)
                {
                    case "OnVacation":
                        statusClass = "status-on-vacation";
                        statusText = "On Vacation";
                        isBookable = false;
                        break;
                    case "Inactive":
                        statusClass = "status-inactive";
                        statusText = "Unavailable";
                        isBookable = false;
                        break;
                    default:
                        statusClass = "status-available";
                        statusText = "Available";
                        break;
                }

                <div class="col-md-6 col-lg-4 mb-4 provider-card-wrapper">
                    <div class="provider-card card h-100 @statusClass">
                        <div class="status-badge">@statusText</div>

                        <div class="card-body d-flex flex-column">
                            <div class="text-center">
                                @if (!string.IsNullOrEmpty(provider.Provider.User.ImagePath))
                                {
                                    <img src="~/uploads/@provider.Provider.User.ImagePath" alt="Provider" class="provider-img mb-3" />
                                }
                                else
                                {
                                    <div class="provider-initials mb-3">
                                        @provider.Provider.User.FirstName.ToUpper().FirstOrDefault()
                                    </div>
                                }
                                <h5 class="card-title provider-name fw-bold">@provider.Provider.User.FirstName @provider.Provider.User.LastName</h5>
                                <p class="card-subtitle mb-2 text-muted">
                                    <i class="bi bi-geo-alt-fill me-1"></i> @provider.Provider.User.City
                                </p>
                            </div>

                            <div class="d-flex justify-content-center align-items-center mb-3">
                                <div class="star-rating" data-rating="@provider.AverageRating"></div>
                                <span class="numeric-rating">(@provider.AverageRating.ToString("0.0"))</span>
                            </div>

                            <p class="card-text text-muted small text-center flex-grow-1">
                                @provider.Provider.Description
                            </p>

                            <div class="mt-auto text-center">
                                @if (isBookable)
                                {
                                    <button class="btn btn-primary rounded-pill w-100 book-now-btn"
                                            data-provider-id="@provider.Provider.ProvidersId"
                                            data-bs-toggle="modal"
                                            data-bs-target="#bookingModal">
                                        Book Now
                                    </button>
                                }
                                else if (providerStatus == "OnVacation")
                                {
                                    <div class="non-bookable-notice">
                                        <i class="bi bi-clock-history me-1"></i> Currently on vacation
                                    </div>
                                }
                                else
                                {
                                    <div class="non-bookable-notice">
                                        <i class="bi bi-x-circle me-1"></i> Not accepting new orders
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="col-12 text-center mt-5">
                <h4>No providers found for this service.</h4>
                <p class="text-muted">Please check back later or explore other services.</p>
            </div>
        }
    </div>
</div>

<div class="modal fade" id="bookingModal" tabindex="-1" aria-labelledby="bookingModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content booking-modal-content">
            <div class="modal-header booking-modal-header">
                <h5 class="modal-title w-100 text-center" id="bookingModalLabel">Confirm Your Booking</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>

            <div class="modal-body p-4">
                <div class="booking-provider-info mb-4">
                    <div id="bookingProviderImageContainer"></div>
                    <div class="booking-provider-details">
                        <h6 class="mb-0" id="bookingProviderName">Provider Name</h6>
                        <p class="text-muted mb-0" id="bookingServiceName">Service Name</p>
                    </div>
                </div>

                <form id="bookingForm" method="post" asp-controller="Order" asp-action="CreateOrder" asp-route-serviceId="@Model.ServiceId">
                    @Html.AntiForgeryToken()
                    <input type="hidden" id="ProviderId" name="ProviderId" />
                    <input type="hidden" id="PersonId" name="PersonId" value="@Model.PersonId" />

                    <div class="input-group mb-3">
                        <span class="input-group-text"><i class="bi bi-geo-alt-fill"></i></span>
                        <div class="form-floating">
                            <input type="text" class="form-control" id="Address" name="Address" placeholder="Address" required />
                            <label for="Address">Address</label>
                        </div>
                    </div>

                    <div class="input-group mb-3">
                        <span class="input-group-text"><i class="bi bi-link-45deg"></i></span>
                        <div class="form-floating">
                            <input type="text" class="form-control" id="MapUrl" name="MapUrl" placeholder="Map URL (Optional)" />
                            <label for="MapUrl">Map URL (Optional)</label>
                        </div>
                    </div>

                    <div class="input-group mb-3">
                        <span class="input-group-text"><i class="bi bi-pencil-square"></i></span>
                        <div class="form-floating">
                            <textarea class="form-control" id="orderDescription" name="Description" placeholder="Description (Optional)" rows="3" style="height: 100px;"></textarea>
                            <label for="orderDescription">Notes for the provider (Optional)</label>
                        </div>
                    </div>

                    <div class="row g-3">
                        <div class="col-6">
                            <div class="input-group">
                                <span class="input-group-text"><i class="bi bi-calendar-event"></i></span>
                                <div class="form-floating">
                                    <input type="date" class="form-control" id="OrdersDate" name="OrdersDate" required />
                                    <label for="OrdersDate">Date</label>
                                </div>
                            </div>
                        </div>
                        <div class="col-6">
                            <div class="input-group">
                                <span class="input-group-text"><i class="bi bi-clock-fill"></i></span>
                                <div class="form-floating">
                                    <input type="time" class="form-control" id="OrdersTime" name="OrdersTime" required />
                                    <label for="OrdersTime">Time</label>
                                </div>
                            </div>
                        </div>
                        <div class="col-12 text-center">
                            <div id="timeErrorMessage" class="text-danger small mt-2"></div>
                        </div>
                    </div>
                </form>
            </div>

            <div class="modal-footer booking-modal-footer">
                <button type="button" class="btn btn-secondary rounded-pill px-4" data-bs-dismiss="modal">Cancel</button>
                <button type="submit" form="bookingForm" class="btn btn-primary rounded-pill px-4">Confirm Booking</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            document.getElementById("providerSearch").addEventListener("input", function () {
                const query = this.value.toLowerCase().trim();
                const cards = document.querySelectorAll(".provider-card-wrapper");
                cards.forEach(card => {
                    const name = card.querySelector(".provider-name").innerText.toLowerCase();
                    card.style.display = name.includes(query) ? "" : "none";
                });
            });

            document.querySelectorAll('.star-rating').forEach(starElem => {
                const rating = parseFloat(starElem.getAttribute('data-rating')) || 0;
                starElem.style.setProperty('--rating', Math.min(Math.max(rating, 0), 5));
            });

            document.querySelectorAll('.book-now-btn').forEach(button => {
                button.addEventListener('click', function () {
                    const card = this.closest('.provider-card-wrapper');

                    const providerId = this.getAttribute('data-provider-id');
                    const providerName = card.querySelector('.provider-name').textContent.trim();
                    const serviceName = '@Model.ServiceName';
                    const providerImgSrc = card.querySelector('.provider-img')?.src;
                    const providerInitials = card.querySelector('.provider-initials')?.textContent.trim();

                    document.getElementById('ProviderId').value = providerId;
                    document.getElementById('bookingProviderName').textContent = providerName;
                    document.getElementById('bookingServiceName').textContent = `For: ${serviceName}`;

                    const imageContainer = document.getElementById('bookingProviderImageContainer');
                    imageContainer.innerHTML = '';

                    if (providerImgSrc) {
                        const img = document.createElement('img');
                        img.src = providerImgSrc;
                        img.className = 'booking-provider-img';
                        imageContainer.appendChild(img);
                    } else if (providerInitials) {
                        const initialsDiv = document.createElement('div');
                        initialsDiv.className = 'booking-provider-initials-modal';
                        initialsDiv.textContent = providerInitials;
                        imageContainer.appendChild(initialsDiv);
                    }

                    const today = new Date().toISOString().split('T')[0];
                    document.getElementById('OrdersDate').min = today;
                    document.getElementById('timeErrorMessage').textContent = "";
                });
            });
        });
    </script>
}
